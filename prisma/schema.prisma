generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  uid            String    @unique
  email          String    @unique
  name           String?
  picture        String?
  emailVerified  Boolean   @default(false)
  lastLoggedInAt DateTime?
  loginCount     Int       @default(0)
  isActive       Boolean   @default(true)
  isBlocked      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  isVerified     Boolean   @default(false)
  profile        Profile?

  @@map("users")
}

model Profile {
  id                     String         @id @default(cuid())
  userId                 String         @unique
  isReady                Boolean        @default(false)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  name                   String?
  about                  String?
  gender                 String?
  dateOfBirth            String?
  martialStatus          String?
  education              String?
  jobType                String?
  jobTitle               String?
  income                 String?
  height                 String?
  weight                 String?
  complexion             String?
  mobileNumber           String?
  currentAddress         Json?
  nativePlace            String?
  motherTongue           String?
  fatherName             String?
  fatherOccupation       String?
  motherName             String?
  motherOccupation       String?
  familyType             String?
  youngerBrothers        Int?
  youngerSisters         Int?
  elderBrothers          Int?
  elderSisters           Int?
  youngerBrothersMarried Int?
  youngerSistersMarried  Int?
  elderBrothersMarried   Int?
  elderSistersMarried    Int?
  areYouSaved            String?
  areYouBaptized         String?
  areYouAnointed         String?
  churchName             String?
  denomination           String?
  pastorName             String?
  pastorMobileNumber     String?
  churchAddress          Json?
  exMinAge               Int?
  exMaxAge               Int?
  exEducation            String?
  exJobType              String?
  exIncome               String?
  exComplexion           String?
  exOtherDetails         String?
  profileCreatedFor      String?
  images                 ProfileImage[]
  user                   User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model ProfileImage {
  id        String   @id @default(cuid())
  profileId String
  data      String
  isPrimary Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@map("profile_images")
}
